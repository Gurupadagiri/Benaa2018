@model Benaa2018.Helper.ViewModels.ToDoAllViewModel
<style>
    #addphase .customPopup,
    #addtag .customPopup {
        width: 50%;
        margin: 0 auto;
        position: absolute;
        left: 0;
        right: 0;
        height: 300px;
        top: 20%;
    }

        #addphase .customPopup .panel-body,
        #addtag .customPopup .panel-body {
            height: auto !important;
        }

    #calendarmodal .btn-group-lg > .btn, .btn-lg {
        padding: 0px;
    }
</style>

<div class="modal-dialog modal-lg">

    <div id="messageSaveStatus"></div>
    <form id="frmSubmitToDoMaster" enctype="multipart/form-data" method="post">
        <div class="panel panel-primary customPopup todo-popup">
            <div class="panel-heading themeColor">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="panel-title" id="contactLabel">To-Do Details</h4>
            </div>
            <div class="panel-body">
                <div class="buttonContainer">
                    <div class="btnHolder pull-left">
                        <input type="submit" name="" value="Save" id="btnSaveToDo" class="blueButton">
                        <input type="submit" name="" value="Save &amp; New" id="btnSaveAndNewToDo" class="blueButton">
                    </div>
                    <div class="jobsitetext" style="font-size: 12px; text-align: right">
                        <span id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_lblJobsites"></span>
                        @Html.HiddenFor(a => a.ToDoDetails.Project_ID, new { @id = "hdnProjectIdToDo" })
                        @Html.HiddenFor(a => a.ToDoCheckListItemIndex, new { @id = "hdnCheckListIndex" })
                    </div>
                </div>
                <div class="row1">
                    <div class="topSection">

                        @if (Model != null)
                        {
                            @if (Model.Operation == null)
                            {
                                <div class="col-md-6 leftDiv">
                                    @Html.TextBoxFor(a => a.ToDoDetails.Title, new { @class = "flatTextBox top_small_textbox", @placeholder = "Title..", @title = "Title..", @style = "width: 100%; font-size: 12px; font-weight: bold;" })
                                    @Html.TextAreaFor(a => a.ToDoDetails.TypeNote, new { @class = "flatTextBox bottom_small_textbox", @placeholder = "Type note...", @title = "Type note...", @style = "width:100%;height: 80px; resize: vertical;" })
                                </div>

                            }
                            else if (Model.Operation == "Update")
                            {
                                <div class="col-md-6 leftDiv">
                                    @Html.EditorFor(a => a.ToDoDetails.Title, new { @class = "flatTextBox top_small_textbox", @placeholder = "Title..", @title = "Title..", @style = "width: 100%; font-size: 12px; font-weight: bold;" })
                                    @Html.EditorFor(a => a.ToDoDetails.TypeNote, new { @class = "flatTextBox bottom_small_textbox", @placeholder = "Type note...", @title = "Type note...", @style = "width:100%;height: 80px; resize: vertical;" })
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-md-6 leftDiv">
                                @Html.TextBoxFor(a => a.ToDoDetails.Title, new { @class = "flatTextBox top_small_textbox", @placeholder = "Title..", @title = "Title..", @style = "width: 100%; font-size: 12px; font-weight: bold;" })
                                @Html.TextAreaFor(a => a.ToDoDetails.TypeNote, new { @class = "flatTextBox bottom_small_textbox", @placeholder = "Type note...", @title = "Type note...", @style = "width:100%;height: 80px; resize: vertical;" })
                            </div>

                        }
                        <div class="col-md-6 rightDiv">
                            <div id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_divMarkedComplete" style="clear: both; width: 100%; margin-bottom: 10px;">
                                <div class="to-do-holder">
                                    <div class="to-do-label-status" style="font-weight: bold">Marked Complete:</div>
                                    @Html.CheckBoxFor(a => a.ToDoDetails.IsMarkedComplete, new { @class = "single-to-do-check" })
                                    <label for="ToDoDetails_IsMarkedComplete" class="single-to-do-check"></label>
                                </div>
                                <div class="to-do-completed-by" data-hasqtip="3">
                                    <br>
                                </div>
                                <div style="clear: both"></div>
                            </div>
                            <div class="formHolder">
                                <div class="leftFormHeading">Assigned To:</div>
                                <div class="rightFormText">
                                    <select multiple="multiple" asp-for="UserMasters">
                                        @for (var j = 1; j < 4; j++)
                                        {
                                            var ert = 0;
                                            @foreach (var pitem in ViewBag.SubContractorsList)
                                            {

                                                @if (@pitem.UserOriginaTypeId == j && j > ert)
                                                {
                                                    ert = j;
                                                    <optgroup label="@pitem.UserOriginaTypeText">
                                                        @{
                                                            var childitemfilter = pitem.UserOwnerDifferentTypeId;

                                                            if (childitemfilter != null)
                                                            {
                                                                foreach (var citem in ViewBag.SubContractorsList)
                                                                {
                                                                    if (citem.UserOriginaTypeId == j)
                                                                    {

                                                                        <option value="@citem.UserOwnerDifferentTypeId">@citem.UserOwnerDifferentTypeValue</option>
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    </optgroup>

                                                }

                                            }
                                        }
                                    </select>

                                </div>
                            </div>
                            <div class="formHolder">
                                <div class="leftFormHeading">Priority:</div>
                                <div class="rightFormText">
                                    <select asp-for="ToDoDetails.Priority" class="form-control">
                                        <option value="">None</option>
                                        <option value="Low">Low</option>
                                        <option value="High">High</option>
                                        <option value="Highest">Highest</option>
                                    </select>
                                </div>
                            </div>
                            <div class="formHolder">
                                <div class="leftFormHeading">
                                    <div data-bind="visible: displayToggle" class=" bt-link-schedule-item--switch">
                                        <div class="bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-mini bootstrap-switch-id-ui-id-3 bootstrap-switch-animate bootstrap-switch-off" style="width: 91px;">
                                            <div class="bootstrap-switch-container" style="width: 160px; margin-left: -71px;"><span class="bootstrap-switch-handle-on bootstrap-switch-default" style="width: 71px;">Link To</span><span class="bootstrap-switch-label" style="width: 36px;">&nbsp;</span><span class="bootstrap-switch-handle-off bootstrap-switch-default" style="width: 71px;">Due Date</span><input type="checkbox" data-bind="addUniqueID: relatedItemSliderID, attr: { 'data-on-text': switchLabelOn, 'data-off-text': switchLabelOff }, disable: readOnly, bootstrapSwitchOn: isDeadlineLinked.value" id="ui-id-3" data-on-text="Link To" data-off-text="Due Date"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="rightFormText">
                                    <div class="bt-link-schedule-item--datetime-picker col-md-12" data-bind="visible: !isDeadlineLinked.value(), css: rightPaneClass" style="">
                                        <div class="bt-link-schedule-item--date-picker" params="value: deadLine, readOnly: readOnly, summaryMessage: $component.summaryMessage">
                                            <div class="bt-date-picker">
                                                <label data-bind="text: title, uniqueFor: uniqueId, visible: title().length > 0" for="ui-id-4" style="display: none;"></label>
                                                <div class="bt-date-picker--value-wrapper">
                                                    <div style="flex: 1">
                                                        <!-- Wrap with a flex div in order to share space better with the below bt-tooltip -->
                                                        <div class="input-group input-group-sm date bt-date-picker--value" data-provide="datepicker" data-bind="validationBorder: value">

                                                            @Html.TextBoxFor(a => a.ToDoDetails.DueDateFormat, new { @class = "form-control datePicker hasDatepicker", @dataprovide = "datepicker", @name = "ToDoDetails.DueDateFormat" })
                                                            <label class="input-group-addon" data-bind="uniqueFor: uniqueId, css: { 'disabled-text': ko.unwrap(readOnly) }" for="ui-id-4">
                                                                <i class="glyphicon glyphicon-calendar"></i>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <span class="valMessage bt-date-picker--validator" data-bind="btValidationMessage: value" style="display: none;"></span>
                                        </div>
                                        <div class="bt-link-schedule-item--time-picker-padding"></div>
                                        <div class="bt-link-schedule-item--time-picker" params="value: $component.timePicker.selectedTime, title: '', pickerType: $component.timePicker.type, increment: $component.timePicker.increment, readOnly: readOnly">
                                            <div class="bt-time-picker">
                                                <div class="form-group bt-time-picker--wrapper">
                                                    <label class="bt-time-picker--label" data-bind="uniqueFor: uniqueId, visible: title().length > 0" style="display: none;">
                                                        <span name="ToDoDetails.Duedate" data-bind="text: title"></span>
                                                    </label>
                                                    <select asp-for="ToDoDetails.DueDatetime" class="form-control">
                                                        <option value="12:00 am">12:00 am</option>
                                                        <option value="12:30 am">12:30 am</option>
                                                        <option value="01:00 am">01:00 am</option>
                                                        <option value="01:30 am">01:30 am</option>
                                                        <option value="02:00 am">02:00 am</option>
                                                        <option value="02:30 am">02:30 am</option>
                                                        <option value="03:00 am">03:00 am</option>
                                                        <option value="03:30 am">03:30 am</option>
                                                        <option value="04:00 am">04:00 am</option>
                                                        <option value="04:30 am">04:30 am</option>
                                                        <option value="05:00 am">05:00 am</option>
                                                        <option value="05:30 am">05:30 am</option>
                                                        <option value="06:00 am">06:00 am</option>
                                                        <option value="06:30 am">06:30 am</option>
                                                        <option value="07:00 am">07:00 am</option>
                                                        <option value="07:30 am">07:30 am</option>
                                                        <option value="08:00 am">08:00 am</option>
                                                        <option value="08:30 am">08:30 am</option>
                                                        <option value="09:00 am">09:00 am</option>
                                                        <option value="09:30 am">09:30 am</option>
                                                        <option value="10:00 am">10:00 am</option>
                                                        <option value="10:30 am">10:30 am</option>
                                                        <option value="11:00 am">11:00 am</option>
                                                        <option value="11:30 am">11:30 am</option>
                                                        <option value="12:00 pm">12:00 pm</option>
                                                        <option value="12:30 pm">12:30 pm</option>
                                                        <option value="01:00 pm">01:00 pm</option>
                                                        <option value="01:30 pm">01:30 pm</option>
                                                        <option value="02:00 pm">02:00 pm</option>
                                                        <option value="02:30 pm">02:30 pm</option>
                                                        <option value="03:00 pm">03:00 pm</option>
                                                        <option value="03:30 pm">03:30 pm</option>
                                                        <option value="04:00 pm">04:00 pm</option>
                                                        <option value="04:30 pm">04:30 pm</option>
                                                        <option value="05:00 pm">05:00 pm</option>
                                                        <option value="05:30 pm">05:30 pm</option>
                                                        <option value="06:00 pm">06:00 pm</option>
                                                        <option value="06:30 pm">06:30 pm</option>
                                                        <option value="07:00 pm">07:00 pm</option>
                                                        <option value="07:30 pm">07:30 pm</option>
                                                        <option value="08:00 pm">08:00 pm</option>
                                                        <option value="08:30 pm">08:30 pm</option>
                                                        <option value="09:00 pm">09:00 pm</option>
                                                        <option value="09:30 pm">09:30 pm</option>
                                                        <option value="10:00 pm">10:00 pm</option>
                                                        <option value="10:30 pm">10:30 pm</option>
                                                        <option value="11:00 pm">11:00 pm</option>
                                                        <option value="11:30 pm">11:30 pm</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <span class="valMessage bt-time-picker--validator" data-bind="btValidationMessage: value" style="display: none;"></span>
                                        </div>
                                        <!-- /ko -->
                                    </div>
                                    <div data-bind="visible: isDeadlineLinked.value(), css: rightPaneClass" class="col-md-12 sheduleItemHolder" style="display: none;">
                                        <div data-bind="visible: showOffsetOptions &amp;&amp; isBuilder" class="row bt-link-schedule-item--row-spacing">
                                            <div class="col-xs-12 bt-link-schedule-item--days-section">
                                                <div class="bt-link-schedule-item--days" params="value: deadLineOffset, summaryMessage: $component.summaryMessage + ': Lag', min: -999, max: 999, valueUpdate: 'blur', readOnly: readOnly">
                                                    <div class="bt-whole-number">
                                                        <label class="bt-whole-number--label" data-bind="text: title, visible: title().length > 0" style="display: none;"></label>
                                                        <input asp-for="ToDoDetails.LinkToUnit" class="bt-whole-number--value form-control input-sm" type="number">
                                                      
                                                    </div>
                                                    <span class="valMessage" data-bind="btValidationMessage: value" style="display: none;"></span>
                                                </div>
                                                <span class="bt-link-schedule-item--daysText">day(s)</span>
                                                <bt-single-select-dropdown class="bt-link-schedule-item--typeSelect" >
                                                    <label data-bind="text: title, visible: ko.unwrap(title).length > 0" style="display: none;"></label>
                                                    <div class="bt-single-select-dropdown bt-dropdown-chosen-container" id="ui-id-5">
                                                        <select class="chosen-select" id="ui-id-6" style="display: none;">
                                                            <option value="2">BEFORE</option>
                                                            <option value="1">AFTER</option>
                                                        </select>

                                                        <div class="chosen-container chosen-container-single chosen-container-single-nosearch" title="" id="ui_id_6_chosen" style="width: 100%;">
                                                            <a class="chosen-single beforeClass" style="display:none;">
                                                                <input class="chosen-search-input" type="text" autocomplete="off" readonly="">
                                                                <span>BEFORE</span>
                                                                <div><b></b></div>
                                                            </a>
                                                            <div class="chosen-drop">
                                                                <div class="chosen-search">
                                                                </div>
                                                                <ul class="chosen-results"></ul>
                                                            </div>
                                                        </div>
                                                        <select asp-for="ToDoDetails.LinkToDaysStatus" class="form-control">
                                                            <option value="Before">Before</option>
                                                            <option value="After">After</option>
                                                        </select>
                                                    </div>
                                                    <div class="bt-single-select-dropdown">
                                                        <span class="valMessage" data-bind="btValidationMessage: serviceObject.selectedValue" style="display: none;"></span>
                                                    </div>
                                                </bt-single-select-dropdown>
                                            </div>
                                        </div>
                                        <div class=" bt-link-schedule-item--row-spacing">
                                            <div class="col-md-12 bt-link-schedule-item--related-schedule-item">
                                                <div class="input-group input-group-sm bt-link-schedule-item--input-group">
                                                  <div class="bt-single-select-dropdown bt-dropdown-chosen-container" id="ui-id-7">
                                                      @Html.DropDownListFor(a => a.ScheduleItems, new SelectList(Model.CalendarScheduledItemModel.CalendarScheduledItemModels, "ScheduledItemId", "Title"), new { @multiple = "multiple", @class = "withCheckbox required" })
                                                    </div>
                                                    <div class="input-group-btn">
                                                        <a href="#" data-toggle="modal" data-target="#calendarmodal" type="button" class="btn btn-default bt-link-schedule-item--schedule-btn" aria-label="Add Schedule">
                                                            <span class="glyphicon glyphicon-plus"></span>
                                                        </a>                                                       
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div data-bind="visible: !ko.unwrap(canViewSchedules) &amp;&amp; isBuilder" class="row bt-link-schedule-item--row-spacing" style="display: none;">
                                            <div class="col-xs-12 bt-link-schedule-item--permission-message">
                                                <input type="text" class="form-control input-sm" disabled="" data-bind="value: disabledLinkText">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="formHolder">
                                <div class="leftFormHeading">Reminder:</div>
                                <div class="rightFormText">
                                    <select asp-for="ToDoDetails.ReminderId" class="form-control">
                                        <option value="None"> None </option>
                                        <option value="Just Before">Just Before</option>
                                        <option value="1 Hour"> 1 Hour</option>
                                    </select>
                                    <a href="javascript:void(0);" id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_Tooltip2_hrefToolTip" class="ToolTip " data-tooltip="The <b>Reminder</b>, when selected, will alert the assigned user prior to the due date/time of this item.  Alerts will be sent to users via email (and text message if setup).  Reminders are sent at 8am unless an hourly reminder is selected." data-hasqtip="1" aria-describedby="qtip-1">
                                        <img src="~/images/iconToolTip.png" id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_Tooltip2_imgToolTipIcon" border="0" align="absmiddle">
                                    </a>
                                </div>
                            </div>
                            <div class="formHolder edit">
                                <div class="leftFormHeading">Tags:</div>
                                <div class="editHolder">
                                    <a href="javascript:void(0);" class="btn-lg" data-toggle="modal" data-target="#addtag" title="Add a Tag">
                                        <img id="" border="0" src="./Images/add.gif" style="border-width:0px;">
                                    </a>
                                    <a href="javascript:void(0);" title="Edit / Delete a Tag">
                                        <img id="" border="0" src="./Images/edit.gif" style="border-width:0px;">
                                    </a>
                                </div>
                                <div class="rightFormText">
                                    @Html.DropDownListFor(x => x.TagIds, new SelectList(ViewBag.TagsList, "TagId", "TagName"), "--Select--", new { id = "ddlTag", @class = "form-control", @multiple = "multiple" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row1">
                    <div class="topSection multipleSelectBoxes">
                        <h2>
                            Checklist <input type="button" name="" value="Add Checklist" class="mainButton" id="addRemoveButton">
                            <div class="multiCheckBoxHolder">
                                <div class="checkbox checkboxAssignChecklist">
                                    <label>
                                        @*<span class="liThirdRowControl"><input class="checkListUser" type="checkbox" name="ToDoCheckList.ToDoAssignIsCheckListItem" data-off-text="Off" data-on-text="On"></span>*@
                                        <span class="liThirdRowControl">@Html.CheckBoxFor(a => a.ToDoCheckList.ToDoAssignIsCheckListItem, new { @class = "checkListUser" })</span>
                                        <span class="chkText">
                                            Assign Checklist Items?
                                        </span>
                                        <a href="javascript:void(0);" id="todo" class="ToolTip " data-tooltip="Assigning check list item will grant the assigned user access to the To-Do."><img src="~/images/iconToolTip.png" border="0" align="absmiddle"></a>
                                    </label>
                                </div>
                                <div class="checkbox checkboxChecklistItems">
                                    <label>
                                        <span class="liThirdRowControl">
                                            @Html.CheckBoxFor(a => a.ToDoCheckList.ToDoAssignIFilesCheckListItem, new { @class = "checkListUser" })
                                        </span>
                                        <span class="chkText">
                                            Add Files to Checklist Items
                                        </span>
                                    </label>
                                </div>
                            </div>
                        </h2>
                        <div class="multiInputHolder">
                            <div class="cloneMainContainer" id="checkListAppend">
                                @if (Model.lstCheckListDetail.Count > 0)
                                {
                                    for (int i = 0; i < 100; i++)
                                    {
                                        if (i < 3)
                                        {
                                        <div class="cloneingboxholder">
                                            <div id="" class="grabHandle dragHandle grabbable ui-sortable-handle">
                                                <span id="">
                                                    <img src="images/drag.png" id="" style="border-width: 0px; height: 30px;">
                                                </span>
                                            </div>
                                            <div class="liColumn">
                                                @Html.CheckBoxFor(m => m.lstCheckListDetail[i].ToDoIsCheckList)
                                                <label for="lstCheckListDetail_@(i)__ToDoIsCheckList" class="lineItemCheck"></label>
                                            </div>
                                            <div class="liColumn1" style="border-top: 1px solid #e9e9e9 !important;">
                                                @Html.TextAreaFor(m => m.lstCheckListDetail[i].ToDoCheckListTitle, new { @rows = "2", @cols = "20", @maxlength = "256", @class = "flatTextBox", @style = "width: 100%; white-space: normal; overflow: hidden; word-wrap: break-word; resize: horizontal; height: 32px;" })
                                                <br>
                                                <span id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_licChecklistRedesign__li_0_rvTDLineDescription" style="color:Red;display:none;">Please enter a maximum of 256 characters</span>
                                            </div>
                                            <div class="liColumn1" title="" style="display:none">
                                                <a class="chosen-single">
                                                </a>
                                                @*@Html.DropDownListFor(x => x.lstCheckListDetail[i].ToDoCheckListUserId, new SelectList(ViewBag.SubContractorsList, "UserOwnerDifferentTypeId", "UserOwnerDifferentTypeValue", "UserOriginaTypeText"), new { @class = "form-control ddlCheckListUser", @style = "display:none" })*@


                                                <select id="ddlUserDiffer@(i)" multiple="multiple"  asp-for="UserMasters" class="ddldropdown">


                                                    @for (var j = 1; j < 4; j++)
                                                    {
                                                        var ert = 0;
                                                        @foreach (var pitem in ViewBag.SubContractorsList)
                                                        {

                                                            @if (@pitem.UserOriginaTypeId == j && j > ert)
                                                            {
                                                                ert = j;
                                                                <optgroup label="@pitem.UserOriginaTypeText">
                                                                    @{
                                                                        var childitemfilter = pitem.UserOwnerDifferentTypeId;

                                                                        if (childitemfilter != null)
                                                                        {
                                                                            foreach (var citem in ViewBag.SubContractorsList)
                                                                            {
                                                                                if (citem.UserOriginaTypeId == j)
                                                                                {

                                                                                    <option value="@citem.UserOwnerDifferentTypeId">@citem.UserOwnerDifferentTypeValue</option>
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                </optgroup>

                                                                        }

                                                                        }
                                                                        }
                                                </select>

                                            </div>
                                        </div>

                                                                        }
                                                                        else

                                                                        {
                                        <div class="cloneingboxholder" data-id="@(i)" id="cloneingboxholder@(i)" hidden>
                                            <div id="" class="grabHandle dragHandle grabbable ui-sortable-handle">
                                                <span id="">
                                                    <img src="images/drag.png" id="" style="border-width: 0px; height: 30px;">
                                                </span>
                                            </div>
                                            <div class="liColumn">
                                                @Html.CheckBoxFor(m => m.lstCheckListDetail[i].ToDoIsCheckList)
                                                <label for="lstCheckListDetail_@(i)__ToDoIsCheckList" class="lineItemCheck"></label>
                                            </div>
                                            <div class="liColumn1" style="border-top: 1px solid #e9e9e9 !important;">
                                                @Html.TextAreaFor(m => m.lstCheckListDetail[i].ToDoCheckListTitle, new { @rows = "2", @cols = "20", @maxlength = "256", @class = "flatTextBox", @style = "width: 100%; white-space: normal; overflow: hidden; word-wrap: break-word; resize: horizontal; height: 32px;" })
                                                <br>
                                                <span id="ctl00_ctl00_BaseMain_MainContentHolder_ecToDos_licChecklistRedesign__li_0_rvTDLineDescription" style="color:Red;display:none;">Please enter a maximum of 256 characters</span>
                                            </div>
                                            <div class="liColumn1" title="">
                                                <a class="chosen-single">
                                                </a>
                                                @*@Html.DropDownListFor(x => x.lstCheckListDetail[i].ToDoCheckListUserId, new SelectList(ViewBag.SubContractorsList, "UserOwnerDifferentTypeId", "UserOwnerDifferentTypeValue", "UserOriginaTypeText"), new { @class = "form-control ddlCheckListUser", @style = "display:none" })*@
                                                <select id="ddlUserDiffer@(i)" multiple="multiple"  asp-for="UserMasters">

                                                    @for (var j = 1; j < 4; j++)
                                                    {
                                                        var ert = 0;
                                                        @foreach (var pitem in ViewBag.SubContractorsList)
                                                        {

                                                            @if (@pitem.UserOriginaTypeId == j && j > ert)
                                                            {
                                                                ert = j;
                                                                <optgroup label="@pitem.UserOriginaTypeText">
                                                                    @{
                                                                        var childitemfilter = pitem.UserOwnerDifferentTypeId;

                                                                        if (childitemfilter != null)
                                                                        {
                                                                            foreach (var citem in ViewBag.SubContractorsList)
                                                                            {
                                                                                if (citem.UserOriginaTypeId == j)
                                                                                {

                                                                                    <option value="@citem.UserOwnerDifferentTypeId">@citem.UserOwnerDifferentTypeValue</option>
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                </optgroup>

                                                                        }

                                                                        }
                                                                        }
                                                </select>
                                            </div>
                                        </div>

                                            }
                                        }
                                    }
                                <div id="appendTextData"></div>
                            </div>
                            <a class="add-check-list" href="javascript:void(0);">
                                <img class="btnCheckList" src="images/expandHeader.png" alt="" title="" id="btnAddExtra" />
                            </a>
                        </div>
                    </div>
                </div>
                <div class="row1">
                    <div class="topSection fileMessaging">
                        <h2>Files & Messaging</h2>
                        <div class="col-md-6">
                            <h3>Attachments<input type="submit" name="" value="Add" class="mainButton"> <input type="submit" name="" value="Create New Doc" class="mainButton"></h3>
                        </div>
                        <div class="col-md-6">
                            <h2>Messaging<span>(Messaging available after save)</span></h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

</div>
<div class="modal fade" id="addtag" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
    <div class="panel panel-primary customPopup">
        <div class="panel-heading themeColor">
            <button type="button" class="close infoclose" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="panel-title" id="contactLabel">Phase List</h4>
        </div>
        <div class="panel-body">
            <input type="button" id="btnAddTag" class="blueButton" value="Save">
            <div class="header">
                Adding a schedule item tag
            </div>
            <input type="text" id="txtTag" class="form-control" />
        </div>
    </div>
</div>