@model Benaa2018.Helper.ViewModels.ProjectBoqBudgetMasterViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="modal fade" id="estimateDetail" tabindex="-1" role="dialog">
    <form id="frmSchedule" asp-controller="Home" asp-action="SaveProjectBoqDetail" data-ajax="true" data-ajax-method="POST" data-ajax-success="onSuccess">
        @Html.HiddenFor(x => x.Project_Boq_ID)
        <div class="modal-dialog modal-lg width94">
            <div class="panel-heading themeColor">
                <button type="button" class="close infoclose" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="panel-title" id="contactLabel">Estimate Edit</h4>
            </div>
            <div class="panel panel-primary customPopup">
                <div class="modal-dialog modal-lg width94">
                    <div class="itemHolder">
                        <div class="itemLabel">Activity</div>
                        <div class="itemInput">
                            <span class="input-group-addon li-catalog">
                                <a href="#" title="Link this line item to your cost catalog">
                                    <img class="calenterIcon" alt="Selection Catalog" src="~/images/catalogWhite.png">
                                </a>
                            </span>
                            <div class="box">
                                <div class="box-body">
                                    <div class="form-group">
                                        <select class="form-control selectpicker" id="select-country" data-live-search="true">
                                            <option data-tokens="china">China</option>
                                            <option data-tokens="malayasia">Malayasia</option>
                                            <option data-tokens="singapore">Singapore</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="itemHolder">
                        <div class="itemLabel">Unit</div>
                        <div class="itemInput">
                            <select>
                                <option>1</option>
                                <option>2</option>
                            </select>
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Original Quantity</div>
                        <div class="itemInput">
                            <input type="text" name="">
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Unit Cost</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Unit_Cost, new { @class = "withSAR", @onkeyup = "UnitCalculationEstimatePopup(this)" })
                            @*<input class="withSAR" type="text" name="" value="22.22">*@
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Exec Cost</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Execution_Cost, new { @class = "withSAR",@id= "Execution_Cost" })
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Tax</div>
                        <div class="itemInput">
                            <select onchange="ManageTaxbaxesEnableEstimatePopup(this)">
                                <option>%</option>
                                <option>ر.س.&rlm;/unit</option>
                                <option>ر.س.&rlm;</option>
                                <option>-</option>
                            </select>
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Tax (%)</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Tax_Percentage, new { @class = "withSAR",@id= "Tax_Percentage" })
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Tax Unit</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Tax_Unit, new { @class = "withSAR",@id= "Tax_Unit" })
                        </div>
                    </div>


                    <div class="itemHolder">
                        <div class="itemLabel">Total Tax</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Tax_Value, new { @class = "withSAR" })
                        </div>
                    </div>


                    <div class="itemHolder">
                        <div class="itemLabel">Total Exec Cost</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Total_Builder_Cost, new { @class = "withSAR" })
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Markup</div>
                        <div class="itemInput">
                            <select onchange="ManagemarkupTaxsEnableEstimatePopup(this)">
                                <option>%</option>
                                <option>ر.س.&rlm;/unit</option>
                                <option>ر.س.&rlm;</option>
                                <option>-</option>
                            </select>
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Markup (%)</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Markup_Percentage, new { @class = "withSAR",@id= "Markup_Percentage" })
                        </div>
                    </div>


                    <div class="itemHolder">
                        <div class="itemLabel">Markup Unit</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Markup_Value, new { @class = "withSAR",@id= "Markup_Value" })
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Total Markup</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.Total_Markup, new { @class = "withSAR" })
                        </div>
                    </div>

                    <div class="itemHolder">
                        <div class="itemLabel">Owner Price</div>
                        <div class="itemInput">
                            <span class="input-group-addon">SAR</span>
                            @Html.TextBoxFor(x => x.steakholder_Price, new { @class = "withSAR" })
                        </div>
                    </div>

                    <div class="textareaHolder">
                        <div class="itemHolder itemHolderTextarea">
                            <textarea class="form-control input-sm" maxlength="50" placeholder="Title"></textarea>
                        </div>

                        <div class="itemHolder itemHolderTextarea">
                            <textarea class="form-control input-sm" maxlength="50" placeholder="Description"></textarea>
                        </div>

                        <div class="itemHolder itemHolderTextarea">
                            @Html.TextAreaFor(x => x.Notes, new { @class = "form-control input-sm", @maxlength = "50" })
                            @*<textarea class="form-control input-sm" maxlength="50" placeholder="Internal Notes"></textarea>*@
                        </div>


                    </div>


                    <div class="itemHolder lastitemHolder">
                        <div class="itemInput">
                            <input type="submit" name="" class="saveBtn" value="SAVE">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    function onSuccess(context) {
        if (context) {
            alert("Saved successfully");
            $('#estimateDetail').modal('hide');
        }
    }

    function UnitCalculationEstimatePopup(e) {
        var qantity = @Model.Quantity;
        $('#Execution_Cost').val($(e).val() * qantity);
   // }


    //function Temp() {
        if (taxkupValu == "%") {
            $('#Markup_Percentage').attr('disabled', false);
            $('#Markup_Value').prop('disabled', true);
            $('#Markup_Value').val(0);
        }
        else if (taxkupValu == "ر.س.‏/unit") {
            $('#Markup_Value').attr('disabled', false);
            $('#Markup_Percentage').prop('disabled', true);
            $('#Markup_Percentage').val(0);
        }
        else {
            $('#Markup_Value').attr('disabled', false);
            $('#Markup_Percentage').attr('disabled', false);
        }
    }
    function ManageTaxbaxesEnableEstimatePopup(e) {

        var taxkupValu = $(e).val();

        if (taxkupValu == "%") {
            $('#Tax_Percentage').attr('disabled', false);
            $('#Tax_Unit').prop('disabled', true);
            $('#Tax_Unit').val(0);
        }
        else if (taxkupValu == "ر.س.‏/unit") {
            $('#Tax_Unit').attr('disabled', false);
            $('#Tax_Percentage').prop('disabled', true);
            $('#Tax_Percentage').val(0);
        }
        else {
            $('#Tax_Unit').attr('disabled', false);
            $('#Tax_Percentage').attr('disabled', false);
        }
    }
</script>
