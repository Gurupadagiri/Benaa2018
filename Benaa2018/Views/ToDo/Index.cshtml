@model Benaa2018.Helper.ViewModels.ToDoAllViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    Benaa2018.Helper.ViewModels.BaseViewModel baseModel = ViewBag.Basemodel;
}
@if (ViewBag.IsleftMenuVisible != false)
{
    <div class="col-xs-12 col-sm-6 col-md-3  col-lg-2" id="leftNavCon">
        @Html.Partial("_leftMenu", baseModel);
    </div>
}

<div class=" mainContentDiv todoMainHolder">
    <div class="row mrgnRyt0 mrgnLft0 ">

        <div class="col-xs-12 col-sm-12 col-md-12  col-lg-12" id="rightCon1">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12  col-lg-12 sort-me">
                    <div class="list-group-item  main-color-bg-pink">
                        <span> To-Do List -<span id="projectname"></span></span>
                    </div>

                    <div class="col-xs-8">
                        @*<input type="text" asp-for="StartDate" class="form-control" value="" />*@
                        <input type="hidden" id="ProjectId" class="form-control" value="" />
                    </div>

                    <div class="tableContainer todoHolder ">
                        <div class="table table-striped custab">
                            <div class="pull-left"><a href="#home" data-toggle="modal" id="infoEdit" data-target="#infoModal" data-original-title="" class="btn btn-success btn-sm">New To-Do</a></div>
                            <div class="pull-right">
                                <select class="form-control" id="ddlAssign">
                                    <option>Checked Actions</option>
                                    <option>Print Checked</option>
                                    <option>Assign To</option>
                                    <option id="btnChecked">Mark Complete</option>
                                    <option>Copy To-Dos</option>
                                    <option>Delete Checked</option>
                                </select>
                                <div><a href="#home" data-toggle="modal" data-target="#infoModal1" class="Click Import To-Do Template">Import To-Do's</a></div>
                            </div>
                        </div>
                    </div>
                    <div class="todoShortHolder">
                        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" id="headingOne">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="">
                                            FILTER YOUR RESULTS
                                        </a>
                                    </h4>
                                </div>

                                <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne" aria-expanded="false" style="height: 0px;">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-sm-2 form-group">
                                                <span>Keywords</span>
                                                <input type="text" id="txtToDoKeyWords" class="form-control" placeholder="Keyword">

                                                @*<div class="ms-options-wrap"><button type="button"><span>--Select--</span></button><div class="ms-options" style="min-height: 200px; max-height: 642px;"><div class="ms-search"><input type="text" value="" placeholder="Search"></div><a href="http://localhost:64732/home#" class="ms-selectall global">Select all</a><ul style="column-count: 1; column-gap: 0px;"><li data-search-term="test"><label for="ms-opt-5"><input type="checkbox" title="test" id="ms-opt-5" value="1">test</label></li><li data-search-term="test1"><label for="ms-opt-6"><input type="checkbox" title="test1" id="ms-opt-6" value="2">test1</label></li></ul></div></div>*@
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Assigned To</span>

                                                <select name="cars" class="form-control" id="ddlAssignedToToDoSearch">
                                                    <option value="5">All To-Do's</option>
                                                    <option value="1">Assigned to Me</option>
                                                    <option value="2">Assigned to / Created by Me</option>
                                                    <option value="3">Created by Me</option>
                                                    <option value="4">All Builder Created To-Do's</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Users Assigned To</span>
                                                @Html.DropDownListFor(x => x.UserMasters, new SelectList(ViewBag.SubContractorsList, "UserOwnerDifferentTypeId", "UserOwnerDifferentTypeValue", "UserOriginaTypeText"), new { id = "ddlToDoAssignToDoSearch", @class = "form-control" })

                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Status</span>
                                                <select name="cars" class="form-control" id="ddlToDoStatusToDoSearch">
                                                    <option value="2">All Statuses</option>
                                                    <option value="1">Completed</option>
                                                    <option value="0">Not Complted</option>
                                                </select>
                                            </div>


                                        </div>
                                        <div class="row">

                                            <div class="col-sm-2 form-group">
                                                <span>Priority</span>
                                                <select id="ddlToDoPriorityToDoSearch" name="languages" multiple>
                                                    <option value="0">None</option>
                                                    <option value="1">Low</option>
                                                    <option value="2">High</option>
                                                    <option value="3">Highest</option>
                                                </select>

                                            </div>

                                            <div class="col-sm-2 form-group">

                                                <label>Tags</label>
                                                <div class="input-group">

                                                    @Html.DropDownListFor(x => x.TagIds, new SelectList(ViewBag.TagsList, "TagId", "TagName"), "--Select--", new { id = "ddlTagToDoSearch", @class = "form-control", @multiple = "multiple" })
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Due Date</span>
                                                <select name="cars" class="form-control" id="ddlDueDate">
                                                    <option value="1">All Dates</option>
                                                    <option value="2">Custom Dates</option>
                                                    <option value="3">Today</option>
                                                    <option value="4">Today Onward</option>
                                                    <option value="5">Next 30 Days</option>
                                                    <option value="6">Next 14 Days</option>
                                                    <option value="7">Next 7 Days</option>
                                                    <option value="8">Today &amp; Tomorrow</option>
                                                    <option value="9">Today &amp; Yesterday</option>
                                                    <option value="10">Past 7 Days</option>
                                                    <option value="11">Past 14 Days</option>
                                                    <option value="12">Past 30 Days</option>
                                                </select>

                                            </div>
                                            <div class="col-sm-2 form-group" id="FromDue">
                                                <label>From:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group" id="TomDue">
                                                <label>To:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date1" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            @*<div class="col-sm-2 form-group tooltip-div">
                                                    <label>Name</label>
                                                    <div class="input-group">
                                                        <input type="text" id="serchtext" class="form-control" placeholder="Keyword">
                                                    </div>
                                                </div>*@
                                            <div class="col-sm-2 form-group">
                                                <span>Completion Date</span>
                                                <select name="cars" class="form-control" id="ddlCompletionDate">
                                                    <option value="1">All Dates</option>
                                                    <option value="2">Custom Dates</option>
                                                    <option value="3">Today</option>
                                                    <option value="4">Today Onward</option>
                                                    <option value="5">Next 30 Days</option>
                                                    <option value="6">Next 14 Days</option>
                                                    <option value="7">Next 7 Days</option>
                                                    <option value="8">Today &amp; Tomorrow</option>
                                                    <option value="9">Today &amp; Yesterday</option>
                                                    <option value="10">Past 7 Days</option>
                                                    <option value="11">Past 14 Days</option>
                                                    <option value="12">Past 30 Days</option>
                                                </select>

                                            </div>
                                            <div class="col-sm-2 form-group" id="FromCompletion">
                                                <label>From:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group" id="ToCompletion">
                                                <label>To:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date1" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" id="btnUpdateResults">Update Results</button>&nbsp;
                                                <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Reset</button>&nbsp;
                                                <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Save Filter</button>&nbsp;
                                                @*<button class="btn btn-default btn-sm dropdown-toggle exportExcel" type="button" data-toggle="dropdown">Export to Excel</button>*@

                                                @*<button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Save Filter1</button>*@

                                                <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" id="export">Export to Excel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="tabsConatiner" id="todoContain">
                            <div class="tabbable boxed parentTabs">
                                <div class="tab-content">
                                    <div class="tab-pane fade active in">
                                        <div class="tabConInfo">
                                            <div class="dataTableConatainer">
                                                <table id="internaluser" class="table table-striped table-bordered" cellspacing="0" width="100%"></table>
                                                <table id="internaluser1" class="table table-striped table-bordered" cellspacing="0" width="100%"></table>
                                                <a id="btnExcelLink" href="javascript:void(0)">Download</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="infoModal1" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">

        <div class="panel panel-primary customPopup">
            <div class="panel-heading themeColor">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="panel-title" id="contactLabel">Import Data From Template</h4>

                <table cellpadding="0" cellspacing="0" align="left" style="width: 100%">

                    <tbody>
                        <tr>
                            <td class="WhiteTopButtonHolder">
                                <div class="buttonContainer">
                                    <input type="submit" name="ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave" value="Save" onclick="MassImport.enableValidators(); if (Page_ClientValidate('vgCopy') &amp;&amp; Page_ClientValidate('vgTimePicker')) { TemplateCopy.GetInactiveCostCodes('ctl00_ctl00_BaseMain_MainContentHolder_massImportControl_lstTemplates_DropDownList1','ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave',1); btMaster.ShowProcessingSpinnerForPostbacks('Importing data...'); return false;} else { return false; };WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave&quot;, &quot;&quot;, true, &quot;vgCopy&quot;, &quot;&quot;, false, false))" id="ctl00_ctl00_BaseMain_MainContentHolder_massImportControl_btnSave" class="blueButton">
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td style="padding: 0px;" id="templateCopy">
                                <div class="grayBackgroundContent">
                                    <div class="roundedRectangleContent">
                                        <div class="paddingContent">
                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <td class="fieldHeader" style="padding-right:10px;">
                                                            Source Template*
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">


    @Html.Partial("_toDoAddNew", Model)
</div>
<div class="modal fade selectSedualedItem" id="selectSedualedItem" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    @Html.Partial("_toDoAddSchedule", Model)
</div>


<div class="modal fade" id="Setup1">
    @Html.Partial("_todoConversionDetails", Model)
</div>

<div id="calendarpage" class="ContentContainer greyTableBorder" style="margin-left: 235px;">
    @*<div class="mainheader">
            ToDo <span id="jobsiteName">
            </span>
        </div>*@
    <div id="pleaseselect" class="">
        « Please Select a Jobsite from the left menu to continue
    </div>
</div>
<script type="text/javascript">

    //$(document).on("click", "#tblAccounts tbody tr td input"
    $(document).on('click', '.type1', function () {
        var ids = $(this).attr('dataids');

        $('#hiddenToDoDetailsId').val(ids);
        $.ajax({
                        url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                data: { ToDoDetailsId: ids },
                success: function (result) {
                            debugger;
                    $.each(JSON.parse(result), function (key, value) {
                        var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                        $('#messageId').append(items);
                    });
                            $('#Setup1').modal('show');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
    });
    $(document).ready(function () {
        $('#todoContain').hide();
        $("#projectname").text('To-Do');

        @*$('.type1').click(function () {
            debugger;
            //event.preventDefault();
            alert('hi');
            var ids = $(this).attr('dataids');
            $('#hiddenToDoDetailsId').val(ids);
            $.ajax({
                        url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                data: { ToDoDetailsId: ids },
                success: function (result) {
                            debugger;
                    $.each(JSON.parse(result), function (key, value) {
                        var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                        $('#messageId').append(items);
                    });
                            $('#Setup1').modal('show');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
        });*@



        $('.allProject').click(function () {
           // alert('hi'+ $(this).text());
            $('#calendarpage').hide();
            $('#todoContain').show();
            $("#projectname").text($(this).text());
            var projectId = $(this).attr('data-projectid');
            //alert(projectId);
           $.ajax({
                url: "@(Url.Action("SearchToDobyProject", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
               data: { projectId: projectId},
        success: function (result) {
            //jQuery("#internaluser").setGridParam({ data: jQuery.parseJSON(result), datatype: "json" });

            $('#internaluser').jqGrid('clearGridData');
            $("#internaluser").jqGrid('setGridParam', { data: jQuery.parseJSON(result), datatype: 'local' }).trigger('reloadGrid');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        });

    });

    function formatNumberOfMessages(cellValue, options, rowObject) {

        var dataid = rowObject.ToDoDetails.TodoDetailsID;
        var linkMessage = "<a href='' data-toggle='modal'  class='type1' dataids=" + dataid + ">" + cellValue + "<a/>";
        //var linkMessage = "<a href='' data-toggle='modal'  data-target='#Setup1'  class='type1' dataids=" + dataid+">" + cellValue + "<a/>";
        // var linkMessage = "<a href='' data-toggle='modal'  data-target='#Setup1'  class='type1'>" + cellValue + "<a/>";
        //console.log(rowObject.ToDoDetails.TodoDetailsID);
        //var imageHtml = "<img src='images/" + cellValue + "' originalValue='" + 2 + "' />";
        return linkMessage;
    };
</script>

@*<script>
         $('.type1').click(function () {
                //event.preventDefault();
                alert('hi');
                var ids = $(this).attr('dataids');
                $('#hiddenToDoDetailsId').val(ids);
                $.ajax({
                            url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                            type: 'GET',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                            },
                    data: { ToDoDetailsId: ids },
                    success: function (result) {
                                debugger;
                        $.each(JSON.parse(result), function (key, value) {
                            var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                            $('#messageId').append(items);
                        });
                                $('#Setup1').modal('show');
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(errorThrown);
                            }
                        });
            });
    </script>*@
<script type="text/javascript">

    $(document).ready(function () {
        // alert('Hi');
        // console.log(@Html.Raw(@ViewBag.UserBaseToDoModel));
        //var mdata = JSON.parse(@ViewBag.UserBaseToDoModel);
        var mdata = @Html.Raw(@ViewBag.UserBaseToDoModel);
        //var returnedData = $.grep(mdata, function (element) {
        //    return element.category.indexOf('Project_ID') == 1002;
        //});
        //alert(mdata);
        $("#internaluser").jqGrid({
            colModel: [

                { name: "ToDoDetails.TodoDetailsID", label: "TodoDetailsID", width: 53, key: true, hidden: true },
                {
                    name: "ToDoDetails.Title", label: "Title", width: 53
                },
                {
                    name: "TotalNumberOfMessages", label: "TotalNumberOfMessages", width: 53, formatter: formatNumberOfMessages

                },
                {
                    name: "ToDoDetails.IsMarkedComplete", label: "Complete", editable: true, sortable: true, edittype: 'checkbox', editoptions: { checked: "" }, formatter: 'checkbox', formatoptions: { disabled: false }, width: '100'
                },
                { name: "ToDoDetails.Priority", label: "Priority", width: 65 },
                { name: "UserNames", label: "AssignedTo", width: 65 },
                { name: "ToDoDetails.AssignedTo", label: "Related Daily Log", width: 65 },
                { name: "ToDoDetails.AssignedTo", label: "Files", width: 65 },
                { name: "ToDoDetails.Duedate", label: "Due", width: 41 },
                { name: "ToDoDetails.CreatedBy", label: "CreatedBy", width: 41 },
                { name: "TagNames", label: "Tags", width: 65 }
            ],
            data: mdata,
            iconSet: "fontAwesome",
            idPrefix: "g5_",
            rownumbers: false,
            sortname: "Title",
            sortorder: "desc",
            threeStateSort: true,
            sortIconsBeforeText: true,
            headertitles: true,
            rowList: [5, 10, 20, "10000:All"],
            toppager: true,
            multiselect: true,
            //onCellSelectfunction(id) {
            //    alert(id);
            //},
            pager: true,
            //pager: '#pcmtmpl',
            toolbarfilter: true,
            rowNum: 5,
            viewrecords: true,
            searching: {
                defaultSearch: "cn"
            },
            cellEdit: true,
            //beforeSelectRow: function (rowid, e) {
            //    return false;
            //},
            caption: ""
        });



        $('#btnExcelLink').click(function () {
            console.log('test');
            JSONToCSVConvertor(JSON.stringify($('#internaluser').jqGrid('getRowData')), 'Title', true);
        });

        function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {
            // alert('hi');
            //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
            var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;

            var CSV = '';
            //Set Report title in first row or line

            CSV += ReportTitle + '\r\n\n';

            //This condition will generate the Label/Header
            if (ShowLabel) {
                var row = "";

                //This loop will extract the label from 1st index of on array
                for (var index in arrData[0]) {

                    //Now convert each value to string and comma-seprated
                    row += index + ',';
                }

                row = row.slice(0, -1);

                //append Label row with line break
                CSV += row + '\r\n';
            }

            //1st loop is to extract each row
            for (var i = 0; i < arrData.length; i++) {
                var row = "";

                //2nd loop will extract each column and convert it in string comma-seprated
                for (var index in arrData[i]) {
                    row += '"' + arrData[i][index] + '",';
                }

                row.slice(0, row.length - 1);

                //add a line break after each row
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                alert("Invalid data");
                return;
            }

            //Generate a file name
            var fileName = "MyReport_";
            //this will remove the blank-spaces from the title and replace it with an underscore
            fileName += ReportTitle.replace(/ /g, "_");

            //Initialize file format you want csv or xls
            var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);

            // Now the little tricky part.
            // you can use either>> window.open(uri);
            // but this will not work in some browsers
            // or you will not get the correct file extension

            //this trick will generate a temp <a /> tag
            var link = document.createElement("a");
            link.href = uri;

            //set the visibility hidden so it will not effect on your web-layout
            link.style = "visibility:hidden";
            link.download = fileName + ".csv";

            //this part will append the anchor tag and remove it after automatic click
            console.log(document.body);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        };





    });

    function formatNumberOfMessages(cellValue, options, rowObject) {

        var dataid = rowObject.ToDoDetails.TodoDetailsID;
        var linkMessage = "<a href='' data-toggle='modal'  class='type1' dataids=" + dataid + ">" + cellValue + "<a/>";
        //var linkMessage = "<a href='' data-toggle='modal'  data-target='#Setup1'  class='type1' dataids=" + dataid+">" + cellValue + "<a/>";
       // var linkMessage = "<a href='' data-toggle='modal'  data-target='#Setup1'  class='type1'>" + cellValue + "<a/>";
        //console.log(rowObject.ToDoDetails.TodoDetailsID);
        //var imageHtml = "<img src='images/" + cellValue + "' originalValue='" + 2 + "' />";
        return linkMessage;
    };
</script>

<script>
    $(document).ready(function () {
        $('.type1').click(function () {
            debugger;
            //event.preventDefault();
            alert('hi');
            var ids = $(this).attr('dataids');
            $('#hiddenToDoDetailsId').val(ids);
            $.ajax({
                        url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                data: { ToDoDetailsId: ids },
                success: function (result) {
                            debugger;
                    $.each(JSON.parse(result), function (key, value) {
                        var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                        $('#messageId').append(items);
                    });
                            $('#Setup1').modal('show');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
        });


        $('#btnPostComment').click(function () {

           // alert('hi save');
            var textComment = $('#titleMessage').val();
            var owner = $('input[name="chkOwner"]').prop('checked');
            var notify = $('input[name="chkNotify"]').prop('checked');
            var sub = $('input[name="chkSub"]').prop('checked');
           // alert(textComment + owner + notify + sub);

             $.ajax({
                        url: "@(Url.Action("SaveToDoMessage", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                 data: {
                     todoDetailsId: $('#hiddenToDoDetailsId').val(), titleMessage: textComment, owner: owner, notify: true, sub: sub },
                success: function (result) {

                    if (result == "success") {
                        alert('sucees');
                        $('#messageId').prepend("<div><span>" + textComment + "</span> <span>ert</span></div>");

                    }


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
        });
    });
</script>



<script type="text/javascript">
    $(function () {
        $('#ddlTag').multiselect({
            includeSelectAllOption: true
        });
    })
</script>
<script>
    $(document).ready(function () {
        $("#export").click(function () {
        });
        $("#btnSaveToDo").click(function (e) {
            //alert('Ok');
            debugger;
            e.preventDefault();
       //  var infoForm = $("#frmSubmitToDoMaster");
          //  var postData = $("#frmSubmitToDoMaster")


            $.ajax({
                url: "@(Url.Action("SaveToDo", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data:
                     $("#frmSubmitToDoMaster").serialize(),
                success: function (data) {
                    if (data == true) {
                        infoForm.find("input[type='text']").each(function (i, element) {
                            $(this).val('');
                        });
                        alert("Project Details Successfully Added");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
           @*var model = { @Model.ToDoDetails.Title : $("#txtTile").text()!= null ? $("#txtTile").text():"" , @Model.ToDoDetails.TypeNote: $("#txtTypeNote").text().trim() };*@
        });

        //$("#ddltag").next(div).click(function () {
        //    alert('hi');
        //});

        $("#ddlTag").next('.ms-options-wrap').children(".ms-options").click(function () {
           // alert('Hi')
          var totalnumer=$("#ddlTag").next('.ms-options-wrap').children(".ms-options").children("ul").children().length;
            var totalSelected = $("#ddlTag").next('.ms-options-wrap').children(".ms-options").children("ul").children(".selected").length;
            console.log(totalnumer + " " + totalSelected);


           // $("#ddlTag").next('.ms-options-wrap').children("button").children("span").text('Hi');
        });
    });

</script>
<script type="text/javascript">

    $('#btnUpdateResults').click(function (e) {


        //$('#internaluser1').clearGridData();
        //$('#internaluser1').trigger('reloadGrid');
            e.preventDefault();
            //alert('Hi');
            var Keywords = $('#txtToDoKeyWords').val();
            var AssignedTo = $('#ddlAssignedToToDoSearch :selected').val();
            var usersAssignedTo = $('#ddlToDoAssignToDoSearch :selected').val();
            var status = $('#ddlToDoStatusToDoSearch :selected').val();
           // var priority = $('#ddlToDoPriorityToDoSearch :selected').text();
        var priority = $('#ddlToDoPriorityToDoSearch').next().children('button').children().text();

        var selectedTags = $('#ddlTagToDoSearch').next().children('button').children().text();
    $.ajax({
                url: "@(Url.Action("SearchToDo", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
        data: { keywords: Keywords, assignedto: AssignedTo, usersAssignedTo: parseInt(usersAssignedTo), status: parseInt(status), priority: priority, tags:selectedTags  },
        success: function (result) {
            //jQuery("#internaluser").setGridParam({ data: jQuery.parseJSON(result), datatype: "json" });

            $('#internaluser').jqGrid('clearGridData');
            $("#internaluser").jqGrid('setGridParam', { data: jQuery.parseJSON(result), datatype: 'local' }).trigger('reloadGrid');

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        });
    $(document).ready(function () {


        //$('#internaluser').click(function () {




        @*$('#btnChecked').click(function () {
            $.ajax({
                url: "@(Url.Action("SaveToDoIsComplete", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { ToDoDetailsId: "1002" },
        success: function (result) {
            debugger;

            alert('success');


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        });*@



        @*$('#btnDeleted').click(function () {
            $.ajax({
                url: "@(Url.Action("DeleteToDo", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { ToDoDetailsId: "2" },
        success: function (result) {
            debugger;

            alert('success');


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        });*@



        @*$('#btnAssignTo').click(function () {
            $.ajax({
                url: "@(Url.Action("AssignToDoUser", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { ToDoDetailsId: "2" },
        success: function (result) {
            debugger;

            alert('success');


                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });

        });*@
        //function getSelectedRows() {
        //    var grid = $("#internaluser");
        //    var rowKey = grid.getGridParam("selrow");

        //    if (!rowKey)
        //        alert("No rows are selected");
        //    else {
        //        var selectedIDs = grid.getGridParam("selarrrow");
        //        var result = "";
        //        for (var i = 0; i < selectedIDs.length; i++) {
        //            result += selectedIDs[i] + ",";
        //        }

        //        alert(result);
        //    }
        //}
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ddlToDoPriorityToDoSearch').multiselect();
        $('#ddlTagToDoSearch').multiselect();
        $('#ddlPermission').multiselect();
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {


        $('#FromCompletion').hide();
        $('#ToCompletion').hide();
        $('#FromDue').hide();
        $('#TomDue').hide();

        $('#ddlDueDate').click(function () {

            var dueDate = $(this).val();
            //console.log('Hi ' +dueDate);
           // alert('Hi ' + dueDate);
            if (dueDate == 2) {

                //$('#FromCompletion').hide();
                //$('#ToCompletion').hide();
                $('#FromDue').show();
                $('#TomDue').show();
            }
            else {
                //$('#FromCompletion').hide();
                //$('#ToCompletion').hide();
                $('#FromDue').hide();
                $('#TomDue').hide();

            }

        });



        $('#ddlCompletionDate').click(function () {

            var completionDate = $(this).val();
            //console.log('Hi ' +dueDate);
            // alert('Hi ' + dueDate);
            if (completionDate == 2) {

                $('#FromCompletion').show()
                $('#ToCompletion').show()
                //$('#FromDue').hide();
                //$('#TomDue').hide();
            }
            else {
                $('#FromCompletion').hide();
                $('#ToCompletion').hide();
                //$('#FromDue').hide();
                //$('#TomDue').hide();

            }

        });


        $('#ddlAssign').change(function () {

            var text = $(this).val();
          //  alert(text);

            if (text == "Mark Complete") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");

                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }


                    $.ajax({
                        url: "@(Url.Action("SaveToDoIsComplete", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { ToDoDetailsId: result },
                        success: function (result) {
                            debugger;

                            alert('success');


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
            else if (text == "Assign To") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");

                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }

                    $.ajax({
                        url: "@(Url.Action("AssignToDoUser", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { userids: "5", ToDoDetailsId: result },
                        success: function (result) {
                            //debugger;

                            alert('success');


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }

            }

            else if (text == "Delete Checked") {

                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");

                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }

                    $.ajax({
                        url: "@(Url.Action("DeleteToDo", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { ToDoDetailsId: result },
                        success: function (result) {
                            debugger;

                            alert('success');


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
            else if (text == "Copy To-Dos") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");

                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }

                     $.ajax({
                        url: "@(Url.Action("CopyToDo", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                         data: { todoDetailIds: result },
                        success: function (result) {
                            debugger;

                            alert('success');


                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }


            }

            });

    });
</script>
<script type="text/javascript">
    $(document).ready(function () {

        var item = 3;
        var itemLength = item + 3;

        $('#addRemoveButton').click(function () {
            var buttonText = $(this).text();
            $('#appendTextData').empty();
        });

        $('.checkListUser').click(function () {

            if ($(".checkListUser").prop('checked') == true) {
                $('.ddlCheckListUser').show();
            }
            else {
                $('.ddlCheckListUser').hide();
            }
        });


    });
</script>

