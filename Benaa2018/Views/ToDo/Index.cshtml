@model Benaa2018.Helper.ViewModels.ToDoAllViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Benaa2018.Custom_Helpers
@{
    Benaa2018.Helper.ViewModels.BaseViewModel baseModel = ViewBag.Basemodel;
}
<style type="text/css">
    .state_active {
        text-decoration: line-through;
        /*content: "\00B7";
        font-size: 1px;*/
    }
</style>
@if (ViewBag.IsleftMenuVisible != false)
{
    <div class="col-xs-12 col-sm-6 col-md-3  col-lg-2" id="leftNavCon">
        @Html.Partial("_leftMenu", baseModel);
    </div>
}

<div class=" mainContentDiv todoMainHolder">
    <div class="row mrgnRyt0 mrgnLft0 ">
        <div class="col-xs-12 col-sm-12 col-md-12  col-lg-12" id="rightCon1">
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12  col-lg-12 sort-me">
                    <div class="list-group-item  main-color-bg-pink">
                        <span> To-Do List -<span id="projectname"></span></span>
                    </div>
                    <div class="col-xs-8">
                        <input type="hidden" id="ProjectId" class="form-control" value="" />
                        <input type="hidden" id="hdnAssignNewUsersRole" class="form-control" value="" />
                    </div>
                    <div class="tableContainer todoHolder todoAreaVisible" style="display:none">
                        <div class="table table-striped custab">
                            <div class="pull-left col-sm-8"><a href="#home" data-toggle="modal" id="infoEdit" data-target="#todoinfoModal" data-original-title="" class="btn btn-success btn-sm">New To-Do</a></div>
                            <div class="pull-right col-sm-4 todoToolRight">
                                <div class="todo-button"><a href="#home" data-toggle="modal" data-target="#infoModal1" class="Click Import To-Do Template">Import To-Do's</a></div>
                                <select class="form-control" id="ddlAssign">
                                    <option>Checked Actions</option>
                                    <option>Print Checked</option>
                                    <option>Assign To</option>
                                    <option id="btnChecked">Mark Complete</option>
                                    <option>Copy To-Dos</option>
                                    <option>Delete Checked</option>
                                </select>

                            </div>
                        </div>
                    </div>
                    <div class="todoShortHolder todoAreaVisible" style="display:none">
                        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                            <div class="panel panel-default">
                                <div class="panel-heading" role="tab" id="headingOne">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#todocollapseOne" aria-expanded="true" aria-controls="collapseOne" class="">
                                            FILTER YOUR RESULTS
                                        </a>
                                    </h4>
                                </div>
                                <div id="todocollapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne" aria-expanded="false" style="height: 0px;">
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-sm-3 form-group">
                                                <span>Keywords</span>
                                                <input type="text" id="txtToDoKeyWords" class="form-control" placeholder="Keyword">
                                            </div>
                                            <div class="col-sm-3 form-group">
                                                <span>Assigned To</span>
                                                <select name="cars" class="form-control" id="ddlAssignedToToDoSearch">
                                                    <option value="5">All To-Do's</option>
                                                    <option value="1">Assigned to Me</option>
                                                    <option value="2">Assigned to / Created by Me</option>
                                                    <option value="3">Created by Me</option>
                                                    <option value="4">All Builder Created To-Do's</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-3 form-group">
                                                <span>Users Assigned To</span>
                                                <select id="ddltravelmodeSearchFilter" multiple="multiple">
                                                    @for (var j = 1; j < 4; j++)
                                                    {
                                                        var ert = 0;
                                                        @foreach (var pitem in ViewBag.SubContractorsList)
                                                        {
                                                            @if (@pitem.UserOriginaTypeId == j && j > ert)
                                                            {
                                                                ert = j;
                                                                <optgroup label="@pitem.UserOriginaTypeText">
                                                                    @{
                                                                        var childitemfilter = pitem.UserOwnerDifferentTypeId;

                                                                        if (childitemfilter != null)
                                                                        {
                                                                            foreach (var citem in ViewBag.SubContractorsList)
                                                                            {
                                                                                if (citem.UserOriginaTypeId == j)
                                                                                {

                                                                                    <option value="@citem.UserOwnerDifferentTypeId">@citem.UserOwnerDifferentTypeValue</option>
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                </optgroup>
                                                            }
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-sm-3 form-group">
                                                <span>Status</span>
                                                <select name="cars" class="form-control" id="ddlToDoStatusToDoSearch">
                                                    <option value="2">All Statuses</option>
                                                    <option value="1">Completed</option>
                                                    <option value="0">Not Complted</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-2 form-group">
                                                <span>Priority</span>
                                                <select id="ddlToDoPriorityToDoSearch" name="languages" multiple>
                                                    <option value="0">None</option>
                                                    <option value="1">Low</option>
                                                    <option value="2">High</option>
                                                    <option value="3">Highest</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <label style="margin-bottom:0;">Tags</label>
                                                <div class="">
                                                    @Html.DropDownListFor(x => x.TagIds, new SelectList(ViewBag.TagsList, "TagId", "TagName"), "--Select--", new { id = "ddlTagToDoSearch", @class = "form-control", @multiple = "multiple" })
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Due Date</span>
                                                <select name="cars" class="form-control" id="ddlDueDate">
                                                    <option value="1">All Dates</option>
                                                    <option value="2">Custom Dates</option>
                                                    <option value="3">Today</option>
                                                    <option value="4">Today Onward</option>
                                                    <option value="5">Next 30 Days</option>
                                                    <option value="6">Next 14 Days</option>
                                                    <option value="7">Next 7 Days</option>
                                                    <option value="8">Today &amp; Tomorrow</option>
                                                    <option value="9">Today &amp; Yesterday</option>
                                                    <option value="10">Past 7 Days</option>
                                                    <option value="11">Past 14 Days</option>
                                                    <option value="12">Past 30 Days</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2 form-group" id="FromDue">
                                                <label>From:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group" id="TomDue">
                                                <label>To:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date1" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group">
                                                <span>Completion Date</span>
                                                <select name="cars" class="form-control" id="ddlCompletionDate">
                                                    <option value="1">All Dates</option>
                                                    <option value="2">Custom Dates</option>
                                                    <option value="3">Today</option>
                                                    <option value="4">Today Onward</option>
                                                    <option value="5">Next 30 Days</option>
                                                    <option value="6">Next 14 Days</option>
                                                    <option value="7">Next 7 Days</option>
                                                    <option value="8">Today &amp; Tomorrow</option>
                                                    <option value="9">Today &amp; Yesterday</option>
                                                    <option value="10">Past 7 Days</option>
                                                    <option value="11">Past 14 Days</option>
                                                    <option value="12">Past 30 Days</option>
                                                </select>
                                            </div>
                                            <div class="col-sm-2 form-group" id="FromCompletion">
                                                <label>From:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-2 form-group" id="ToCompletion">
                                                <label>To:</label>
                                                <div class="input-group">
                                                    <input class="form-control" id="date1" name="date" placeholder="MM/DD/YYYY" type="text">  <div class="input-group-addon">
                                                        <i class="fa fa-calendar">
                                                        </i>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" style="background-color: #626262; border-color: #626262;" data-toggle="dropdown" id="btnUpdatetodoResults">Update Results</button>&nbsp;
                                                <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">Reset</button>&nbsp;
                                                <button class="btn btn-default btn-sm dropdown-toggle" style="display:none" type="button" data-toggle="dropdown">Save Filter</button>&nbsp;
                                                <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" id="export">Export to Excel</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tabsConatiner" id="todoContain">
                            <div class="tabbable boxed parentTabs">
                                <div class="tab-content">
                                    <div class="tab-pane fade active in">
                                        <div class="tabConInfo">
                                            <div class="dataTableConatainer">
                                                <table id="internaluser"></table>
                                                <div id="gridpager"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="infoModal1" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="panel panel-primary customPopup todo-popup">
            <div class="panel-heading themeColor">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="panel-title" id="contactLabel">Import Data From Template</h4>
                <table cellpadding="0" cellspacing="0" align="left" style="width: 100%">
                    <tbody>
                        <tr>
                            <td class="WhiteTopButtonHolder">
                                <div class="buttonContainer">
                                    <input type="submit" name="ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave" value="Save" onclick="MassImport.enableValidators(); if (Page_ClientValidate('vgCopy') &amp;&amp; Page_ClientValidate('vgTimePicker')) { TemplateCopy.GetInactiveCostCodes('ctl00_ctl00_BaseMain_MainContentHolder_massImportControl_lstTemplates_DropDownList1','ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave',1); btMaster.ShowProcessingSpinnerForPostbacks('Importing data...'); return false;} else { return false; };WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$ctl00$BaseMain$MainContentHolder$massImportControl$btnSave&quot;, &quot;&quot;, true, &quot;vgCopy&quot;, &quot;&quot;, false, false))" id="ctl00_ctl00_BaseMain_MainContentHolder_massImportControl_btnSave" class="blueButton">
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="padding: 0px;" id="templateCopy">
                                <div class="grayBackgroundContent">
                                    <div class="roundedRectangleContent">
                                        <div class="paddingContent">
                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <td class="fieldHeader" style="padding-right:10px;">
                                                            Source Template*
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="todoinfoModal" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    @Html.Partial("_toDoAddNew", Model)
</div>
<div class="modal fade selectSedualedItem" id="selectSedualedItem" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    @Html.Partial("_toDoAddSchedule", Model)
</div>
<div class="modal fade" id="calendarmodal" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
    @Html.RenderPartialAsync("_addCalendar", Model.CalendarScheduledItemModel)
</div>
<div class="modal fade" id="todoAssignNewUsers" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="panel panel-primary customPopup">
            <div class="panel-heading themeColor">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="panel-title" id="contactLabel">Assign Users</h4>
                <div class="panel-body">
                    <div class="buttonContainer">
                        <div class="formHolder">
                            <div class="leftFormHeading">Assigned To:</div>
                            <div class="rightFormText">
                                <select id="ddlPermissionUserAssign" multiple="multiple" asp-for="UserMasters">
                                    @for (var j = 1; j < 4; j++)
                                    {
                                        var ert = 0;
                                        @foreach (var pitem in ViewBag.SubContractorsList)
                                        {

                                            @if (@pitem.UserOriginaTypeId == j && j > ert)
                                            {
                                                ert = j;
                                                <optgroup label="@pitem.UserOriginaTypeText">
                                                    @{
                                                        var childitemfilter = pitem.UserOwnerDifferentTypeId;

                                                        if (childitemfilter != null)
                                                        {
                                                            foreach (var citem in ViewBag.SubContractorsList)
                                                            {
                                                                if (citem.UserOriginaTypeId == j)
                                                                {

                                                                    <option value="@citem.UserOwnerDifferentTypeId">@citem.UserOwnerDifferentTypeValue</option>
                                                                }
                                                            }
                                                        }
                                                    }
                                                </optgroup>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div>
                                <input type="checkbox" id="chkNotifyNewUser" />Notify new assigned users
                            </div>
                            <div>
                                <input type="button" id="btnAssignNewUsers" value="Assign Users" />
                                <input type="button" id="btnCancelAssignNewUsers" value="Assign Users" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ToDoUpdate" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
   
    @Html.Partial("_toDoAddNew", Model)
</div>
<div class="modal fade" id="Setup1">
    @Html.Partial("_todoConversionDetails", Model)
</div>

<div id="calendarpage" class="ContentContainer greyTableBorder" style="margin-left: 235px;">
    <div id="pleaseselect" class="">
        « Please Select a Project from the left menu to continue
    </div>
</div>
<div class="modal fade" id="addphase" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
    <div class="panel panel-primary customPopup">
        <div class="panel-heading themeColor ">
            <button type="button" class="close infoclose" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="panel-title" id="contactLabel">Phase List</h4>
        </div>
        <div class="panel-body phase-list">
            <div class="btnHolder"><input type="button" id="btnAddPhase" class="blueButton" value="Save"></div>
            <div class="innerBodyholder">
                <div class="input-group">
                    <label>Phase Name</label>
                    <input type="text" id="PhaseName" class="form-control">
                </div>
                <div class="input-group">
                    <label> Display Order</label>
                    <input type="text" id="DisplayOrder" class="form-control">
                </div>
                <div class="input-group">
                    <label class="">Color:</label>
                    <select id="phasecolor" style="background-color:@baseModel.ProjectColorModels.FirstOrDefault().ColorCode" class="form-control color-select required" data-val="true" data-val-required="The ProjectColorId field is required.">
                        @foreach (var item in baseModel.ProjectColorModels)
                        {
                            <option value="@item.ColorCode" style="background-color:@item.ColorCode">@item.ProjectColorName</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="addtag" tabindex="-1" role="dialog" aria-labelledby="contactLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: none;">
    <div class="panel panel-primary customPopup">
        <div class="panel-heading themeColor">
            <button type="button" class="close infoclose" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="panel-title" id="contactLabel">Phase List</h4>
        </div>
        <div class="panel-body phase-list">
            <input type="button" id="btnAddTag" class="blueButton" value="Save">
            <div class="header">
                Adding a schedule item tag
            </div>
            <input type="text" id="txtTag" class="form-control" />
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).on("click", "#addRemoveButton", function (event) {
        if ($(this).val() == "Remove Checklist") {
            $('.permanentNot').remove();
            $('.cloneingboxholder').hide();
        }
        else {
        
            $('.multiInputHolder').show();
        }    
    });

    $(document).ready(function () {        
        $(document).on("click", "td[aria-describedby='internaluser_ToDoDetails.Title']", function () {
            //$('.multiInputHolder').show();
            var ids = $(this).find('a').attr('dataids');
            var postData = { "ToDoDetailsId": parseInt(ids) };
            $("#ToDoUpdate").load('ToDo/PopulateTodoInfo', postData);
        });
        $(document).on('click', '.type1', function () {
            var ids = $(this).attr('dataids');
            $('#hiddenToDoDetailsId').val(ids);
            $.ajax({
                url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { ToDoDetailsId: ids },
                success: function (result) {
                $.each(JSON.parse(result), function (key, value) {
                var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                $('#messageId').append(items);
                });
                    $('#Setup1').modal('show');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
        $(document).on('click', '#btnAddExtraUpdate', function (e) {
            for (var j = 3; j < 6; j++) {
                var index = 'cloneingboxholder' + j;
                $('#cloneingboxholder' + j).show();
            }
            itemCount = itemCount + 3;
            itemMaxCount = itemMaxCount + 3;
            $('#hdnCheckListIndex').val(itemCount);
        });
        $(document).on('click', '#btnUpdateToDo', function (e) {
            $.ajax({
                url: "@(Url.Action("UpdateToDo", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data:$("#frmSubmitUpdateToDoMaster").serialize(),
                success: function (data) {
                    if (data == "Success") {
                        alert("Todo Saved Successfully");
                        //location.reload(true);
                    }
                    else {
                        alert("Some problem occurred!! Please try again");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
        var itemCount = 3;
        var itemMaxCount = itemCount + 3;
        $('#hdnCheckListIndex').val(3);
        $('#todoContain').hide();
        $('.todoAreaVisible').hide();
        $("#projectname").text('To-Do');
        $('#ddltravelmode111').multiselect();
        $('#ddlUserDiffer1').multiselect();
        $('#ddlUserDiffer2').multiselect();
        $('#UserMasters').multiselect();
        $('#ddlUserDiffer0').multiselect();
        $('#ddlPermissionUserAssign').multiselect();
        $('#ddltravelmodeSearchFilter').multiselect();
        $("#ddlUserDiffer1").removeAttr("style");
        $("#ddlUserDiffer2").removeAttr("style");
        $("#ddlUserDiffer0").removeAttr("style");
        $('#addRemoveButton').click(function () {
            if ($(this).val() == "Remove Checklist") {
                $('.permanentNot').remove();
                $('.cloneingboxholder').hide();
            }
            else {

                $('.cloneingboxholder').show();
            }
        });
        $('#btnAddExtra').click(function () {
            var startindex = $('#checkListAppend .cloneingboxholder').length ;
            var maxindex = startindex + 3;
            for (var i = startindex; i < maxindex; i++)
            {
            var innerhtml='';
            innerhtml = '<div class="cloneingboxholder permanentNot">';
            innerhtml +='<div class="grabHandle dragHandle grabbable ui-sortable-handle">';
            innerhtml +='<span id=""><img src="images/drag.png" id="" style="border-width: 0px; height: 30px;"></span></div><div class="liColumn">';
                innerhtml += '<input type="checkbox" asp-for="lstCheckListDetail[Model.lstCheckListDetail.IndexOf['+i+'].ToDoIsCheckList" />';
            
            innerhtml +='<label  class="lineItemCheck"></label>';
            innerhtml +='</div><div class="liColumn1" style="">';
                innerhtml += '<input type="text" id="lstCheckListDetail_(0)__ToDoCheckListTitle"  name="lstCheckListDetail[' + i +'].ToDoCheckListTitle" rows="2" cols="20" class="flatTextBox" style="width: 100%; white-space: normal; overflow: hidden; word-wrap: break-word; resize: horizontal; height: 32px;" />';
            innerhtml +='<span id="linedescription" style="color:Red;display:none;">Please enter a maximum of 256 characters</span>';
            innerhtml += '</div>';
                innerhtml +='<div class="liColumn1" title="" style="display:none">';
                innerhtml += '<a class="chosen-single"></a>';
                innerhtml += '<select id="lstCheckListDetail[' + i + '].ToDoCheckListUserId" class="ddldropdown1" name="lstCheckListDetail[' + i +'].ToDoCheckListUserId">';
                var erty = $('#lstCheckListDetail_0__ToDoCheckListUserId').html();
                innerhtml += erty;
                innerhtml += '</select></div>';
                $('#checkListAppend').append(innerhtml);
            }
        });
        $('#btnAddTag').click(function () {
            var title = $('#txtTag').val();
            $.ajax({
                url: "@(Url.Action("SaveTag", "ToDo", null))",
                type: 'POST',
                headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { tagTitle: title},
                success: function (result) {
                    if (result == "success") {
                        alert('Success');
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                alert(errorThrown);
                }
            });
        });
        $('#btnAssignNewUsers').click(function () {
            var userSelected = $('#ddlPermissionUser').val();
            $.ajax({
                url: "@(Url.Action("AssignToDoUser", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: {
                userids: userSelected, ToDoDetailsId: $('#hdnAssignNewUsersRole').val() },
                success: function (result) {
                    alert('assign user successfull');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
             });
        });
        $('.multipleSelectBoxes .mainButton').click(function () {
            $('.multiCheckBoxHolder, .multiInputHolder').slideToggle();
            if ($(this).val() == "Add Checklist")
                $(this).val("Remove Checklist")
            else
                $(this).val("Add Checklist");
        });
        $('.cloneBtnHolder').click(function () {
            $(".cloneMainContainer").clone().prependTo(".cloneBtnHolder");
        });
        $(".checkboxAssignChecklist input[type=checkbox]").change(function () {
            if (this.checked) {
                $('.chosen-container.chosen-container-single').show();
            } else {
                $('.chosen-container.chosen-container-single').hide();
            }
        });
        $('.checkListUser').click(function () {
            if ($(this).prop("checked") == true) {
                $('.liddl').show();
                $(".liColumn1").removeAttr("style");
                $(".ddldropdown1").show();
            }
            else if ($(this).prop("checked") == false) {
                $('.liddl').hide();
                $(".ddldropdown1").hide();
            }
        });
        $('.allProject').click(function () {
            $('a.allProject').removeClass('selected-project');
            $(this).addClass('selected-project');
            $('#todoContain').show();
            $('#calendarpage').hide();
            $('.todoAreaVisible').show();
            $("#projectname").text($(this).text());
            $('#lblJobsites').text($(this).text());
            var projectId = $(this).attr('data-projectid');
            $('#ProjectId').val(projectId);
            $('#hdnProjectIdToDo').val(projectId);
            $('#spnproject').text($(this).text());
            var postData = { "projectId": parseInt(projectId) };
            $.post("ToDo/SearchToDobyProject", postData, function (result) {
                $('#internaluser').jqGrid('clearGridData');
                $("#internaluser").jqGrid('setGridParam', { data: jQuery.parseJSON(result) }).trigger('reloadGrid');
            });
            $('#internaluser_toppager_left').empty().append('<button id="btnExcelLink"><span class="ui-icon ui-icon-excel"></span></button>');
        });
        $('#FromCompletion').hide();
        $('#ToCompletion').hide();
        $('#FromDue').hide();
        $('#TomDue').hide();
        $('#ddlDueDate').click(function () {
            var dueDate = $(this).val();
            if (dueDate == 2) {
                $('#FromDue').show();
                $('#TomDue').show();
            }
            else {
                $('#FromDue').hide();
                $('#TomDue').hide();
            }
        });
        $('#ddlCompletionDate').click(function () {
            var completionDate = $(this).val();
            if (completionDate == 2) {
                $('#FromCompletion').show();
                $('#ToCompletion').show();
            }
            else {
                $('#FromCompletion').hide();
                $('#ToCompletion').hide();
            }
        });
        $('#btnCancelPostComment').click(function () {
            //location.reload(true);
        });
        $('#ddlAssign').change(function () {
            var text = $(this).val();
            if (text == "Mark Complete") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");
                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }
                    $.ajax({
                        url: "@(Url.Action("SaveToDoIsComplete", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { ToDoDetailsId: result },
                        success: function (result) {
                            alert('success');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
            else if (text == "Assign To") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");
                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }
                    $('#hdnAssignNewUsersRole').val(result);
                    $('#todoAssignNewUsers').modal('show');
                }
            }
            else if (text == "Delete Checked") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");
                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }
                    $.ajax({
                        url: "@(Url.Action("DeleteToDo", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { ToDoDetailsId: result },
                        success: function (result) {
                            alert('success');
                            //location.reload(true);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
            else if (text == "Copy To-Dos") {
                var grid = $("#internaluser");
                var rowKey = grid.getGridParam("selrow");
                if (!rowKey)
                    alert("No rows are selected");
                else {
                    var selectedIDs = grid.getGridParam("selarrrow");
                    var result = "";
                    for (var i = 0; i < selectedIDs.length; i++) {
                        result += selectedIDs[i] + ",";
                    }
                    $.ajax({
                        url: "@(Url.Action("CopyToDo", "ToDo", null))",
                        type: 'GET',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        data: { todoDetailIds: result },
                        success: function (result) {
                            alert('success');
                            $('#hdnProjectIdToDo').val(projectId);
                            $.ajax({
                                url: "@(Url.Action("SearchToDobyProject", "ToDo", null))",
                                type: 'POST',
                                headers: {
                                    'Accept': 'application/json',
                                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                                },
                                data: { projectId: projectId },
                                success: function (result) {
                                    $('#internaluser').jqGrid('clearGridData');
                                    $("#internaluser").jqGrid('setGridParam', { data: jQuery.parseJSON(result), datatype: 'local' }).trigger('reloadGrid');
                                }
                            });
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                }
            }
        });
    });
    $(document).ready(function () {
        $('.bootstrap-switch-wrapper').click(function () {
            if ($(this).hasClass('bootstrap-switch-off')) {
                $(this).removeClass('bootstrap-switch-off');
                $(this).addClass('bootstrap-switch-on');
                $('.bootstrap-switch-container').css('margin-left', '0');
                $('.bt-link-schedule-item--datetime-picker').hide();
                $('.sheduleItemHolder').show();
            } else {
                $(this).addClass('bootstrap-switch-off');
                $(this).removeClass('bootstrap-switch-on');
                $('.bootstrap-switch-container').css('margin-left', '-71px');
                $('.bt-link-schedule-item--datetime-picker').show();
                $('.sheduleItemHolder').hide();
            }
        });
        var mdata = @Html.Raw(ViewBag.UserBaseToDoModel);
        $("#internaluser").jqGrid({
            colModel: [
                { name: "ToDoDetails.TodoDetailsID", label: "TodoDetailsID", width: 53, key: true, hidden: true },
                {
                    name: "ToDoDetails.Title", label: "Title", width: 53, formatter: formatTitle
                },
                {
                    name: "TotalNumberOfMessages", label: "TotalNumberOfMessages", width: 53, formatter: formatNumberOfMessages
                },
                {
                    name: "ToDoDetails.IsMarkedComplete", label: "Complete", editable: true, sortable: true, edittype: 'checkbox', formatter: 'checkbox', formatoptions: { disabled: false }, width: '100'
                },
                { name: "ToDoDetails.Priority", label: "Priority", width: 65 },
                { name: "UserNames", label: "AssignedTo", width: 65 },
                { name: "ToDoDetails.AssignedTo", label: "Related Daily Log", width: 65 },
                { name: "ToDoDetails.AssignedTo", label: "Files", width: 65 },
                { name: "ToDoDetails.Duedate", label: "Due", width: 41 },
                { name: "ToDoDetails.CreatedBy", label: "CreatedBy", width: 41 },
                { name: "TagNames", label: "Tags", width: 65 }
            ],
            data: mdata,
            iconSet: "fontAwesome",
            idPrefix: "g5_",
            rownumbers: false,
            sortname: "Title",
            sortorder: "desc",
            threeStateSort: true,
            sortIconsBeforeText: true,
            headertitles: true,
            rowList: [5, 10, 20, "10000:All"],
            toppager: true,
            multiselect: true,
            pager: '#gridpager',
            toolbarfilter: true,
            rowNum: 10,
            viewrecords: true,
            searching: {
                defaultSearch: "cn"
            },
            cellEdit: true,
            caption: "",
            reload: true,
            refresh: true,
            onCellSelect: function (rowid, index, contents, event) {
                var cm = $("#internaluser").jqGrid('getGridParam', 'colModel');
                if (cm[index].name == "ToDoDetails.IsMarkedComplete") {
                    var rowData = $('#internaluser').jqGrid('getRowData', rowid);
                    var celValue2 = $("#internaluser").jqGrid('getCell', rowid, 'ToDoDetails.TodoDetailsID');
                    var celValue1 = $("#internaluser").jqGrid('getCell', rowid, 'ToDoDetails.IsMarkedComplete');
                    if (celValue1 == 'Yes') {
                        var trElement = jQuery("#" + rowid, jQuery('#internaluser'));
                        trElement.removeClass('state_active');
                    }
                    else {
                        var trElement = jQuery("#" + rowid, jQuery('#internaluser'));
                        trElement.removeClass('ui-widget-content');
                        trElement.addClass('state_active');
                        trElement.delay(2500).fadeOut(1600);
                    }
                }
            }
        });

        $("#internaluser").jqGrid('navGrid', '#gridpager',
            { add: false, edit: false, del: false, search: false, refresh: true },
            { width: 5 });

        $("#internaluser").jqGrid('setLabel',
            'Complete',
            '<img src="~/images/message.png width=16 height=16>');
        $('#btnExcelLink').click(function () {
            console.log('test');
            JSONToCSVConvertor(JSON.stringify($('#internaluser').jqGrid('getRowData')), 'Title', true);
        });
        function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {
            var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
            var CSV = '';
            //Set Report title in first row or line

            CSV += ReportTitle + '\r\n\n';
            //This condition will generate the Label/Header
            if (ShowLabel) {
                var row = "";
                //This loop will extract the label from 1st index of on array
                for (var index in arrData[0]) {

                    //Now convert each value to string and comma-seprated
                    row += index + ',';
                }
                row = row.slice(0, -1);
                //append Label row with line break
                CSV += row + '\r\n';
            }
            //1st loop is to extract each row
            for (var i = 0; i < arrData.length; i++) {
                var row = "";

                //2nd loop will extract each column and convert it in string comma-seprated
                for (var index in arrData[i]) {
                    row += '"' + arrData[i][index] + '",';
                }
                row.slice(0, row.length - 1);
                //add a line break after each row
                CSV += row + '\r\n';
            }
            if (CSV == '') {
                alert("Invalid data");
                return;
            }
            //Generate a file name
            var fileName = "MyReport_";
            //this will remove the blank-spaces from the title and replace it with an underscore
            fileName += ReportTitle.replace(/ /g, "_");
            //Initialize file format you want csv or xls
            var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);
            var link = document.createElement("a");
            link.href = uri;
            //set the visibility hidden so it will not effect on your web-layout
            link.style = "visibility:hidden";
            link.download = fileName + ".csv";
            //this part will append the anchor tag and remove it after automatic click
            console.log(document.body);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        };
    });
    function formatNumberOfMessages(cellValue, options, rowObject) {
        var dataid = rowObject.ToDoDetails.TodoDetailsID;
        var linkMessage = "<a href='#ToDoUpdate' data-toggle='modal'  class='type1' dataids=" + dataid + ">" + cellValue + "</a>";
        return linkMessage;
    };
    function formatTitle(cellValue, options, rowObject) {
        var dataid = rowObject.ToDoDetails.TodoDetailsID;
        var linkMessage = "<a href='#ToDoUpdate' data-toggle='modal' class='typeTitle' dataids=" + dataid + ">" + cellValue + "</a>";
        return linkMessage;
    }
    $(document).ready(function () {
        $('.type1').click(function () {
            var ids = $(this).attr('dataids');
            $('#hiddenToDoDetailsId').val(ids);
            $.ajax({
                url: "@(Url.Action("SearchToDoMessage", "ToDo", null))",
                type: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { ToDoDetailsId: ids },
                success: function (result) {
                    $.each(JSON.parse(result), function (key, value) {
                        var items = "<div><span>" + value.ToDoMessageTitle + "</span> <span>" + value.CreatedBy+" </span></div>"
                        $('#messageId').append(items);
                    });
                    $('#Setup1').modal('show');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
        $('#btnPostComment').click(function () {
            var textComment = $('#titleMessage').val();
            var owner = $('input[name="chkOwner"]').prop('checked');
            var notify = $('input[name="chkNotify"]').prop('checked');
            var sub = $('input[name="chkSub"]').prop('checked');
            $.ajax({
            url: "@(Url.Action("SaveToDoMessage", "ToDo", null))",
            type: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
            },
            data: {
            todoDetailsId: $('#hiddenToDoDetailsId').val(), titleMessage: textComment, owner: owner, notify: true, sub: sub },
            success: function (result) {
                if (result == "success") {
                    alert('sucees');
                    $('#messageId').prepend("<div><span>" + textComment + "</span> <span>ert</span></div>");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(errorThrown);
            }
            });
        });
        $('#ddlTag').multiselect({
            includeSelectAllOption: true
        });
        $('#ddlTagUpdate').multiselect({
            includeSelectAllOption: true
        });
        $('#btnSaveAndNewToDo').click(function (e) {
             $.ajax({
                url: "@(Url.Action("SaveToDo", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: $("#frmSubmitToDoMaster").serialize(),
                success: function (data) {
                    if (data == "Success") {
                        alert("Todo Saved Successfully");
                        $('#todoinfoModal').show();
                    } else {
                        alert("Some problem occurred!! Please try again");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
        $("#btnSaveToDo").click(function (e) {
            $.ajax({
            url: "@(Url.Action("SaveToDo", "ToDo", null))",
            type: 'POST',
            headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
            },
            data: $("#frmSubmitToDoMaster").serialize(),
            success: function (data) {
                if (data.success) {
                    $("#frmSubmitToDoMaster").find("input[type='text']").each(function (i, element) {
                        $(this).val('');
                    });
                    if (data.toDoAllModels !== '') {
                        $("#internaluser").jqGrid('setGridParam', { data: JSON.parse(data.toDoListContent) });
                        // refresh the grid
                        $("#internaluser").trigger('reloadGrid');
                    }
                    $('#todoinfoModal').removeClass('in').hide();
                    alert("Todo Saved Successfully");
                }
                else {
                    alert("Some problem occurred!! Please try again");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
            }
            });
        });
        $('#btnUpdatetodoResults').click(function (e) {
            var Keywords = $('#txtToDoKeyWords').val();
            var AssignedTo = $('#ddlAssignedToToDoSearch :selected').val();
            var usersAssignedTo = $('#ddlToDoAssignToDoSearch :selected').val();
            var status = $('#ddlToDoStatusToDoSearch :selected').val();
            var priority = $('#ddlToDoPriorityToDoSearch').next().children('button').children().text();
            var projectId = $('#ProjectId').val();
            var selectedTags = $('#ddlTagToDoSearch').next().children('button').children().text();
            $.ajax({
                url: "@(Url.Action("SearchToDo", "ToDo", null))",
                type: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                },
                data: { keywords: Keywords, assignedto: AssignedTo, usersAssignedTo: parseInt(usersAssignedTo), status: parseInt(status), priority: priority, tags: selectedTags, selectedProjectId: projectId  },
                success: function (result) {
                    $('#internaluser').jqGrid('clearGridData');
                    $("#internaluser").jqGrid('setGridParam', { data: jQuery.parseJSON(result), datatype: 'local' }).trigger('reloadGrid');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
        $('#ddlToDoPriorityToDoSearch').multiselect();
        $('#ddlTagToDoSearch').multiselect();
        $('#FromCompletion').hide();
        $('#ToCompletion').hide();
        $('#FromDue').hide();
        $('#TomDue').hide();
        $('#ddlDueDate').click(function () {
            var dueDate = $(this).val();
            if (dueDate == 2) {
                $('#FromDue').show();
                $('#TomDue').show();
            }
            else {
                $('#FromDue').hide();
                $('#TomDue').hide();
            }
        });
        $('#ddlCompletionDate').click(function () {
            var completionDate = $(this).val();
            if (completionDate == 2) {
                $('#FromCompletion').show();
                $('#ToCompletion').show();
            }
            else {
                $('#FromCompletion').hide();
                $('#ToCompletion').hide();
            }
        });
        var item = 3;
        var itemLength = item + 3;
        $('.checkListUser').click(function () {
            if ($(".checkListUser").prop('checked') == true) {
                $('.ddlCheckListUser').show();
            }
            else {
                $('.ddlCheckListUser').hide();
            }
        });
    });
</script>
